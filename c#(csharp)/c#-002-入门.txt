运算符
用于数值计算
赋值运算符

先看右侧再看左侧  把右侧的值赋值给左侧的变量

算数运算符
+
用自己计算,先算右侧结果 再赋值给左侧变量
int i = 1;
i = i + 2;
连续运算,先算右侧结果 再赋值给左侧变量,之前是几就是几
i = 1+3+89+i+i ;
初始化时就运算 先算右侧的结果 在赋值给左侧变量
-
*
/
%取余
int yum = 4 ;
y = y % 2;
y=0;

算数运算符优先级
乘除取余高于加减  先算乘除再算加减 
括号可以改变优先级, 优先计算括号内内容
多组括号 先算最里层括号 依次往外算

算数运算符的复合运算符
运算符 =
+= -= *= /= %=
用于自己=自己进行运算

复合运算符不能混合运算 不能 */-=
自增减
a++ 先用再加
++a 先加再用

字符串拼接
1.拼接
使用加号进行字符串拼接
str = str + "123"    += 
字符串拼接不能用其他符号
2.拼接
语法: string.Format("带拼接",内容,内容)
想要被拼接的内容用占位符替代{0},数字 0-n
string str2=string.Format("我是{0}","我今年{1}岁","我想要{2}","唐老师",18,"好好学习痛痛痛")
控制台拼接
Console.WriteLine("我是{0}","我今年{1}岁","我想要{2}","唐老师",18,"好好学习痛痛痛")

条件运算符
用于比较两个变量或者常量
是否大于  >
是否小于  <
是否等于  ==
是否不等于 != 
是否大于等于 >=
是否小于等于 <=
条件运算符 一定存在左右两边的内容 
不能直接进行纯比较,没意义
int = 1 ;
int = 2 ;
a>b;
结果是bool值
bool  result = a > b ;
写法 : 
变量比较
a = 5; 
b = 3 ;
a > b;
变量与数值比较
result = a <10;
result = b <10;

数值与数值比较
result = 5 > 3 ; 
result = 5 == 3 ;

计算结果之间的比较
条件运算符的优先级低于算数运算
先计算再比较
result = a +3 >a -2  +3;
不能进行范围比较
不能使用 a = 5 ;
1 < a <6;
判断是否在两数之间

不同变量类型之间比较 , 可以随意进行条件运算符比较

特殊类型只能同类型 进行 char string  bool 只能使用 == !=

逻辑运算符 
是对bool类型进行逻辑运算的 
&&逻辑与 有假则假  同真为真
 逻辑运算符优先级低于条件 算术运算符 
|| 逻辑或 有真则真 同假为假 
! 逻辑非 对bool 值进行取反 
result = !true;
result + !(3>2);
多逻辑与组合
result = 12 > 1 && i2 < 5 && i > 1 && i <5;
 逻辑非优先级最高 ,&& 优先级高于 || 

逻辑运算符的短路规则

result = i3  > 0 || ++i3 >= 0;
短路 我们舍去了右面的步骤

位运算符
位与 & 
连接两个数值进行位运算 将数值转换为2进制
对位运算有0则0 
位与 规则 结果和最小的一样  但是有特例

位或 | 
有1则1

异或  ^
对位运算 相同为0 不同为1 

位取反 ~ 
对位运算 0变1   1 变 0
反码 补码

左移 << 右移 >>
左移几位 右侧加几个零
右移几位 右侧去掉几个数
三目运算符
基本语法 3个空位1 两个符号 
空位 ? 空位 :  空位 ;
bool类型 ? bool类型为真返回内容 : bool 类型为假返回内容;
注意 三目运算符 会有返回值 每个返回值类型必须一直 ,且必须使用

result = true ? true : FALSE ;
第一个空位始终是bool类型表达式











